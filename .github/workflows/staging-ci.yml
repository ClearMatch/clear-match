name: Staging CI/CD

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Enable Corepack
        run: corepack enable
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run linting
        run: pnpm lint
        
      - name: Type check
        run: pnpm exec tsc --noEmit
        
      - name: Run tests
        run: pnpm test
        env:
          NODE_ENV: test

  build-check:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Enable Corepack
        run: corepack enable
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build check
        run: pnpm build
        env:
          # Provide minimal env vars for build
          STAGING_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          STAGING_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
          APP_ENV: staging

  deploy-check:
    needs: [test, build-check]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Deployment Status
        run: |
          echo "‚úÖ All checks passed!"
          echo "üöÄ Vercel will auto-deploy to staging environment"
          echo "üìù Branch: ${{ github.ref_name }}"
          echo "üìä Commit: ${{ github.sha }}"